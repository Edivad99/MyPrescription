@page "/druginformation/{singleUseCode}"
@inject MyPrescriptionClient client
@attribute [Authorize(Roles = "pharmacist")]

<div class="alert alert-danger" role="alert" hidden="@HideWarning">
    Prescription not found!
</div>

<PageTitle>Drug Information</PageTitle>

<h3>Drug Information</h3>

@if (prescription is not null)
{
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Drug name</th>
                    <th>Creation Date</th>
                    <th>Is free?</th>
                </tr>
            </thead>
            <tbody class="table-group-divider">
                <tr>
                    <td>@prescription.DrugName</td>
                    <td>@prescription.CreationDate.ToString()</td>
                    <td>@(prescription.IsFree ? "Yes" : "No")</td>
                </tr>
            </tbody>
        </table>
    </div>
}
<NavLink class="btn btn-primary" href="/drugdelivery">Go Back</NavLink>


@code {
    [Parameter]
    public string? SingleUseCode { get; set; }

    private PrescriptionDTO? prescription;
    private bool HideWarning = true;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(SingleUseCode))
            return;
        var response = await client.GetPrescriptionBySingleUseCodeAsync(SingleUseCode);
        if (!response.IsSuccessStatusCode)
        {
            HideWarning = false;
            return;
        }
        prescription = await response.Content.ReadFromJsonAsync<PrescriptionDTO>();
    }
}
